{"name": "考勤成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_3_attendance.TestAttendance object at 0x00000208D5B6D278>\nteacher_login_fixture = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"53a2c3a9ed0270915bed685bce4169f2\")>\nstu_login_fixture = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"084fe34e51c1dd80b9bbedd4578dfaa2\")>\n\n    @allure.title('考勤成功')\n    def test_attendance_success(self, teacher_login_fixture, stu_login_fixture):\n        driver = teacher_login_fixture\n        index_page = IndexPage(driver)\n>       index_page.create_attendance()\n\ntestcases\\test_3_attendance.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\indexPage.py:95: in create_attendance\n    self.attend_attence()\npage\\indexPage.py:87: in attend_attence\n    self.switch_to_iframe_loc(IndexLocator.attend_iframe_loc, '课程页面_考勤iframe')\ncommon\\base_page.py:244: in switch_to_iframe_loc\n    raise e\ncommon\\base_page.py:238: in switch_to_iframe_loc\n    expected_conditions.frame_to_be_available_and_switch_to_it(loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"53a2c3a9ed0270915bed685bce4169f2\")>\nmethod = <selenium.webdriver.support.expected_conditions.frame_to_be_available_and_switch_to_it object at 0x00000208D5B42630>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\py3.7.3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "失败截图", "source": "5ae14a01-54e7-41ca-9ae1-f64114394bb7-attachment.png", "type": "image/png"}, {"name": "log", "source": "9dcc7268-0fd1-4680-9b7a-44866aaa21c4-attachment.txt", "type": "text/plain"}], "start": 1614337910487, "stop": 1614337986484, "uuid": "5f5a5d32-e783-4a42-bb4b-d60d4f98d44c", "historyId": "5b5960eb8d14da568453dfbfec5e8534", "testCaseId": "27c4e9bf0e677bfa7599a39ee44353b6", "fullName": "testcases.test_3_attendance.TestAttendance#test_attendance_success", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_3_attendance"}, {"name": "subSuite", "value": "TestAttendance"}, {"name": "host", "value": "chnegbo"}, {"name": "thread", "value": "20996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_3_attendance"}]}